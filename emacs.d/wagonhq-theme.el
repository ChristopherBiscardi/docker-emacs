(deftheme wagonhq
  "Created 2016-02-25.")

(custom-theme-set-faces
 'wagonhq
 '(default ((t (:family "default" :foundry "default" :width normal :height 1 :weight normal :slant normal :underline nil :overline nil :strike-through nil :box nil :inverse-video nil :foreground "color-255" :background "color-16" :stipple nil :inherit nil))))
 '(cursor ((((background light)) (:background "black")) (((background dark)) (:background "white"))))
 '(fixed-pitch ((t (:family "Monospace"))))
 '(variable-pitch ((t (:family "Sans Serif"))))
 '(escape-glyph ((((background dark)) (:foreground "cyan")) (((type pc)) (:foreground "magenta")) (t (:foreground "brown"))))
 '(minibuffer-prompt ((t (:foreground "color-201"))))
 '(highlight ((t (:background "color-28"))))
 '(web-mode-html-tag-face ((t (:foreground "blue"))))
 '(region ((((class color) (min-colors 88) (background dark)) (:background "black"))
           (((class color) (min-colors 88) (background light) (type gtk)) (:background "gtk_selection_bg_color" :distant-foreground "gtk_selection_fg_color"))
           (((class color) (min-colors 88) (background light) (type ns)) (:background "ns_selection_bg_color" :distant-foreground "ns_selection_fg_color"))
           (((class color) (min-colors 88) (background light)) (:background "lightgoldenrod2"))
           (((class color) (min-colors 16) (background dark)) (:background "blue3"))
           (((class color) (min-colors 16) (background light)) (:background "lightgoldenrod2"))
           (((class color) (min-colors 8)) (:foreground "white" :background "blue")) (((type tty) (class mono)) (:inverse-video t)) (t (:background "gray"))))
 '(shadow ((((class color grayscale) (min-colors 88) (background light)) (:foreground "grey50")) 
           (((class color grayscale) (min-colors 88) (background dark)) (:foreground "grey70")) 
           (((class color) (min-colors 8) (background light)) (:foreground "green")) 
           (((class color) (min-colors 8) (background dark)) (:foreground "yellow"))))
 '(secondary-selection ((((class color) (min-colors 88) (background light)) (:background "yellow1")) 
                        (((class color) (min-colors 88) (background dark)) (:background "SkyBlue4")) 
                        (((class color) (min-colors 16) (background light)) (:background "yellow")) 
                        (((class color) (min-colors 16) (background dark)) (:background "SkyBlue4")) 
                        (((class color) (min-colors 8)) (:foreground "black" :background "cyan")) (t (:inverse-video t))))
 '(trailing-whitespace ((((class color) (background light)) (:background "red1")) 
                        (((class color) (background dark)) (:background "red1")) (t (:inverse-video t))))
 '(font-lock-builtin-face ((((class grayscale) (background light)) (:weight bold :foreground "LightGray")) 
                           (((class grayscale) (background dark)) (:weight bold :foreground "DimGray")) 
                           (((class color) (min-colors 88) (background light)) (:foreground "dark slate blue")) 
                           (((class color) (min-colors 88) (background dark)) (:foreground "LightSteelBlue")) 
                           (((class color) (min-colors 16) (background light)) (:foreground "Orchid")) 
                           (((class color) (min-colors 16) (background dark)) (:foreground "LightSteelBlue")) 
                           (((class color) (min-colors 8)) (:weight bold :foreground "blue")) (t (:weight bold))))
 '(font-lock-comment-delimiter-face ((t (:inherit (font-lock-comment-face)))))
 '(font-lock-comment-face ((((class grayscale) (background light)) (:slant italic :weight bold :foreground "DimGray"))
			   (((class grayscale) (background dark)) (:slant italic :weight bold :foreground "LightGray"))
			   (((class color) (min-colors 88) (background light)) (:foreground "Firebrick"))
			   (((class color) (min-colors 88) (background dark)) (:foreground "brightblack"))
			   (((class color) (min-colors 16) (background light)) (:foreground "red"))
			   (((class color) (min-colors 16) (background dark)) (:foreground "red1"))
			   (((class color) (min-colors 8) (background light)) (:foreground "red"))
			   (((class color) (min-colors 8) (background dark)) (:foreground "yellow")) (t (:slant italic :weight bold))))
 '(font-lock-constant-face ((((class grayscale) (background light)) (:underline (:color foreground-color :style line) :weight bold :foreground "LightGray")) 
                            (((class grayscale) (background dark)) (:underline (:color foreground-color :style line) :weight bold :foreground "Gray50")) 
                            (((class color) (min-colors 88) (background light)) (:foreground "dark cyan")) 
                            (((class color) (min-colors 88) (background dark)) (:foreground "Aquamarine")) 
                            (((class color) (min-colors 16) (background light)) (:foreground "CadetBlue")) 
                            (((class color) (min-colors 16) (background dark)) (:foreground "Aquamarine")) 
                            (((class color) (min-colors 8)) (:foreground "magenta")) (t (:underline (:color foreground-color :style line) :weight bold))))
 '(font-lock-doc-face ((t (:inherit (font-lock-string-face)))))
 '(font-lock-function-name-face ((t (:foreground "color-201"))))
 '(font-lock-keyword-face ((((class grayscale) (background light)) (:weight bold :foreground "LightGray")) 
                           (((class grayscale) (background dark)) (:weight bold :foreground "DimGray")) 
                           (((class color) (min-colors 88) (background light)) (:foreground "Purple")) 
                           (((class color) (min-colors 88) (background dark)) (:foreground "Cyan1")) 
                           (((class color) (min-colors 16) (background light)) (:foreground "Purple")) 
                           (((class color) (min-colors 16) (background dark)) (:foreground "Cyan")) 
                           (((class color) (min-colors 8)) (:weight bold :foreground "cyan")) (t (:weight bold))))
 '(font-lock-negation-char-face ((t nil)))
 '(font-lock-preprocessor-face ((t (:inherit (font-lock-builtin-face)))))
 '(font-lock-regexp-grouping-backslash ((t (:inherit (bold)))))
 '(font-lock-regexp-grouping-construct ((t (:inherit (bold)))))
 '(font-lock-string-face ((((class grayscale) (background light)) (:slant italic :foreground "DimGray"))
			  (((class grayscale) (background dark)) (:slant italic :foreground "LightGray"))
			  (((class color) (min-colors 88) (background light)) (:foreground "VioletRed4"))
			  (((class color) (min-colors 88) (background dark)) (:foreground "magenta"))
			  (((class color) (min-colors 16) (background light)) (:foreground "RosyBrown"))
			  (((class color) (min-colors 16) (background dark)) (:foreground "LightSalmon"))
			  (((class color) (min-colors 8)) (:foreground "green")) (t (:slant italic))))
 '(font-lock-type-face ((((class grayscale) (background light)) (:weight bold :foreground "Gray90")) 
                        (((class grayscale) (background dark)) (:weight bold :foreground "DimGray")) 
                        (((class color) (min-colors 88) (background light)) (:foreground "ForestGreen")) 
                        (((class color) (min-colors 88) (background dark)) (:foreground "PaleGreen")) 
                        (((class color) (min-colors 16) (background light)) (:foreground "ForestGreen")) 
                        (((class color) (min-colors 16) (background dark)) (:foreground "PaleGreen")) 
                        (((class color) (min-colors 8)) (:foreground "green")) (t (:underline (:color foreground-color :style line) :weight bold))))
 '(font-lock-variable-name-face ((t (:foreground "blue"))))
 '(font-lock-warning-face ((t (:inherit (error)))))
 '(button ((t (:inherit (link)))))
 '(link ((t (:underline (:color foreground-color :style line) :foreground "RoyalBlue3"))))
 '(link-visited ((t (:foreground "magenta4" :inherit (link)))))
 '(fringe ((((class color) (background light)) (:background "grey95")) 
           (((class color) (background dark)) (:background "grey10")) (t (:background "gray"))))
 '(header-line ((t (:underline (:color foreground-color :style line) :inverse-video nil :inherit (mode-line)))))
 '(tooltip ((t (:foreground "black" :background "lightyellow" :inherit (variable-pitch)))))
 '(mode-line ((t (:background "black" :foreground "blue" :box (:line-width -1 :style released-button)))))
 '(mode-line-buffer-id ((t (:weight bold))))
 '(mode-line-emphasis ((t (:weight bold))))
 '(mode-line-highlight ((((class color) (min-colors 88)) (:box (:line-width 2 :color "grey40" :style released-button))) (t (:inherit (highlight)))))
 '(mode-line-inactive ((t (:weight light :box (:line-width -1 :color "grey75" :style nil) :foreground "grey20" :background "black" :inherit (mode-line)))))
 '(isearch ((((class color) (min-colors 88) (background light)) (:foreground "lightskyblue1" :background "magenta3")) 
            (((class color) (min-colors 88) (background dark)) (:foreground "brown4" :background "palevioletred2")) 
            (((class color) (min-colors 16)) (:foreground "cyan1" :background "magenta4")) 
            (((class color) (min-colors 8)) (:foreground "cyan1" :background "magenta4")) (t (:inverse-video t))))
 '(isearch-fail ((((class color) (min-colors 88) (background light)) (:background "RosyBrown1")) 
                 (((class color) (min-colors 88) (background dark)) (:background "red4")) 
                 (((class color) (min-colors 16)) (:background "red")) 
                 (((class color) (min-colors 8)) (:background "red")) 
                 (((class color grayscale)) (:foreground "grey")) (t (:inverse-video t))))
 '(lazy-highlight ((((class color) (min-colors 88) (background light)) (:background "paleturquoise")) 
                   (((class color) (min-colors 88) (background dark)) (:background "paleturquoise4")) 
                   (((class color) (min-colors 16)) (:background "turquoise3")) 
                   (((class color) (min-colors 8)) (:background "turquoise3")) (t (:underline (:color foreground-color :style line)))))
 '(match ((((class color) (min-colors 88) (background light)) (:background "yellow1")) 
          (((class color) (min-colors 88) (background dark)) (:background "RoyalBlue3")) 
          (((class color) (min-colors 8) (background light)) (:foreground "black" :background "yellow")) 
          (((class color) (min-colors 8) (background dark)) (:foreground "white" :background "blue")) (((type tty) (class mono)) (:inverse-video t)) (t (:background "gray"))))
 '(next-error ((t (:inherit (region)))))
 '(query-replace ((t (:inherit (isearch)))))

 '(org-hide ((t (:background "color-16" :foreground "color-16")))))
(provide-theme 'wagonhq)
